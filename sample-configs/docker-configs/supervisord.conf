[unix_http_server]

file = /etc/supervisor/supervisor.sock

[supervisord]

logfile = /etc/supervisor/supervisord.log
loglevel = error
logfile_maxbytes = 50MB
logfile_backups = 10
childlogdir = /etc/supervisor/
pidfile = /etc/supervisor/supervisord.pid
nodaemon = true
user = root

[supervisorctl]

serverurl = unix:///etc/supervisor/supervisor.sock

[rpcinterface:supervisor]

supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; Starts the GW tools application.
;
; Celery complains then dies when you start its process as the root user.
; To overcome this, just set the environment variable C_FORCE_ROOT, or set
; the process to run as a regular user.
;
;[program:gw-tools]

;command = celery -A tools.celeryapp worker --loglevel=info

; If you've configured python to use a virtual enviroment, the celery
; application should be run from that directory. e.g. the command below:
;
; command = /srv/geneweaver/venv/bin/celery -A tools.celeryapp worker --loglevel=info
;
;directory = /srv/geneweaver/
;environment = C_FORCE_ROOT=1
;autorestart = true
;autostart = true
;stdout_logfile = /etc/supervisor/tools-out.log
;stderr_logfile = /etc/supervisor/tools-err.log
;logfile_maxbytes = 50MB
;logfile_backups = 10

; Starts the GW web app. When deploying to production, use the web-app group
; (web-proxy and web-server) to start the application.
;
[program:gw-website]

command = python2 src/application.py

; If you've configured python to use a virtual enviroment, the python
; executable should be run from that directory so all the appropriate installed
; packages are loaded. e.g. the command below:
;
; command = /srv/geneweaver/venv/bin/python src/application.py
;
directory = /srv/geneweaver/website-py
autorestart = true
autostart = true
stdout_logfile = /etc/supervisor/website-out.log
stderr_logfile = /etc/supervisor/website-err.log
logfile_maxbytes = 50MB
logfile_backups = 10

; Flask generates two separate python processes. One actually runs the
; application and another monitors and reloads on source code changes.
; Use this command to completely shutdown the web app.
; Only use this when starting the application via [gw-website].
;
[program:kill-website]

command = pkill -f application.py
directory = /srv/geneweaver/website-py
autorestart = false
autostart = false
redirect_stderr = true

; This command is intended to be used in conjuction with a webserver like
; nginx. The server will handle requests and proxy them over to the flask app.
; Change the directory to the location of the uwsgi.ini file.
;
[program:web-proxy]

directory = /srv/geneweaver/
command=/usr/local/bin/uwsgi --ini /etc/uwsgi/uwsgi.ini --ini /srv/geneweaver/gw-uwsgi.ini
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; (Re)starts the web server, nginx.
;
[program:web-server]
command=/usr/sbin/nginx
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; Start the application (web server and flask app) using "start web-app:*"
;
[group:web-app]

programs=web-server,web-proxy
